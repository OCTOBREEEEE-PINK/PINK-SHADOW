#!/bin/bash

echo "üîß Test complet du syst√®me"
echo "========================="

echo "üìã V√©rification de tous les composants..."

echo ""
echo "1Ô∏è‚É£ Backend (serveur):"
if curl -s http://localhost:8000/config > /dev/null 2>&1; then
    echo "  ‚úÖ Backend accessible sur localhost:8000"
    BACKEND_IP=$(curl -s http://localhost:8000/config | jq -r '.local_ip')
    echo "  üìç IP du backend: $BACKEND_IP"
else
    echo "  ‚ùå Backend non accessible"
    exit 1
fi

echo ""
echo "2Ô∏è‚É£ Endpoints backend:"
echo "  - /config:"
if curl -s http://localhost:8000/config > /dev/null 2>&1; then
    echo "    ‚úÖ Accessible"
else
    echo "    ‚ùå Non accessible"
fi

echo "  - /sessions/DEFAULT/players:"
if curl -s "http://localhost:8000/sessions/DEFAULT/players?pseudo=test" > /dev/null 2>&1; then
    echo "    ‚úÖ Accessible"
    PLAYERS=$(curl -s "http://localhost:8000/sessions/DEFAULT/players?pseudo=test" | jq -r '.players | length')
    echo "    üìä Joueurs dans la session: $PLAYERS"
else
    echo "    ‚ùå Non accessible"
fi

echo "  - /players/emojis:"
if curl -s http://localhost:8000/players/emojis > /dev/null 2>&1; then
    echo "    ‚úÖ Accessible"
else
    echo "    ‚ùå Non accessible"
fi

echo ""
echo "3Ô∏è‚É£ Frontend:"
if curl -s http://localhost:5175 > /dev/null 2>&1; then
    echo "  ‚úÖ Frontend accessible sur localhost:5175"
else
    echo "  ‚ùå Frontend non accessible sur localhost:5175"
fi

echo ""
echo "4Ô∏è‚É£ Configuration r√©seau:"
echo "  - IP du backend: $BACKEND_IP"
echo "  - URL backend: http://$BACKEND_IP:8000"
echo "  - URL frontend: http://$BACKEND_IP:5175"
echo "  - WebSocket: ws://$BACKEND_IP:8000"

echo ""
echo "5Ô∏è‚É£ Instructions de test:"
echo "  1. Sur le PC serveur:"
echo "     - Backend: http://$BACKEND_IP:8000"
echo "     - Frontend: http://$BACKEND_IP:5175"
echo ""
echo "  2. Sur les PC clients:"
echo "     - Ouvrir: http://$BACKEND_IP:5175"
echo "     - V√©rifier que la console affiche:"
echo "       'Backend host: $BACKEND_IP'"
echo "       'Backend: http://$BACKEND_IP:8000'"
echo ""
echo "  3. Test avec 5 joueurs:"
echo "     - S'inscrire avec 5 joueurs diff√©rents"
echo "     - V√©rifier la redirection automatique"
echo "     - V√©rifier que le chat affiche 5 joueurs"
echo "     - Tester l'envoi de messages"

echo ""
echo "6Ô∏è‚É£ D√©pannage:"
echo "  - Si erreur 422: Le param√®tre pseudo est maintenant corrig√©"
echo "  - Si erreur de connexion: V√©rifier l'IP $BACKEND_IP"
echo "  - Si seulement 3 joueurs: V√©rifier la connectivit√© WebSocket"
echo "  - Si 0 joueurs dans le chat: V√©rifier l'endpoint /sessions/{code}/players"

echo ""
echo "7Ô∏è‚É£ Logs √† surveiller:"
echo "  - Backend: 'üöÄ Mission d√©marr√©e pour la session DEFAULT'"
echo "  - Frontend: 'üë• Joueurs connect√©s dans gamepuzzle: [...]'"
echo "  - Frontend: 'üòä √âmojis des joueurs dans gamepuzzle: {...}'"
echo "  - Frontend: 'WebSocket connect√© !'"

echo ""
echo "‚úÖ Test complet termin√© !"
echo ""
echo "üéØ Prochaines √©tapes:"
echo "  1. Tester sur le PC serveur avec 5 joueurs"
echo "  2. Tester sur un PC client avec l'IP $BACKEND_IP"
echo "  3. V√©rifier que tous les joueurs sont redirig√©s ensemble"
echo "  4. V√©rifier que le chat fonctionne avec 5 joueurs"
